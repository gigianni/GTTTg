Filename: main.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   236   27.305 MiB   27.305 MiB           1   @profile
   237                                         def getGTFS():
   238                                             """
   239                                                 Retrieve GTFS data from "https://www.gtt.to.it/open_data/gtt_gtfs.zip"
   240                                                 and populates RT
   241                                             """
   242                                             global runningGTFS
   243   27.305 MiB    0.000 MiB           1       runningGTFS = 1
   244   27.305 MiB    0.000 MiB           1       t = time.time()
   245   27.305 MiB    0.000 MiB           1       p = 'https://www.gtt.to.it/open_data/gtt_gtfs.zip'
   246
   247   49.977 MiB   22.672 MiB           1       r = requests.get(p)
   248   49.980 MiB    0.004 MiB           1       if not r.ok:
   249                                                 logger(f'{getDatetimeNowStr()} <b>getGTFS()<\b>\n error retrieving gtt_gtfs.zip,'
   250                                                        f'\n calling getGTFS()')
   251                                                 getGTFS()
   252
   253   50.016 MiB    0.035 MiB           1       archive = zipfile.ZipFile(io.BytesIO(r.content))
   254
   255   50.020 MiB    0.004 MiB           1       print("--- retrieveGTFS: %s seconds ---" % (time.time() - t))
   256   50.020 MiB    0.000 MiB           1       t = time.time()
   257                                             global RT
   258   50.020 MiB    0.000 MiB           1       RT = RealTimeData()
   259
   260   51.941 MiB    1.922 MiB           1       s = archive.read('stops.txt').decode("utf-8").splitlines()[1:]
   261   56.422 MiB    1.367 MiB        7158       for row in csv.reader(s, quotechar='"', delimiter=',', quoting=csv.QUOTE_ALL, skipinitialspace=True):
   262                                                 # "stop_id", "stop_code", "stop_name", "stop_desc", "stop_lat", "stop_lon", "zone_id", "stop_url", "location_type", "parent_station", "stop_timezone", "wheelchair_boarding"
   263                                                 # passed to RT "stop_id", "stop_name", "stop_code"
   264   56.422 MiB    3.113 MiB        7157           RT.add_stop(row[0], row[2], row[1])
   265
   266   56.520 MiB    0.098 MiB           1       s = archive.read('routes.txt').decode("utf-8").splitlines()[1:]
   267   56.535 MiB    0.000 MiB         223       for row in csv.reader(s, quotechar='"', delimiter=',', quoting=csv.QUOTE_ALL, skipinitialspace=True):
   268                                                 # "route_id", "agency_id", "route_short_name", "route_long_name", "route_desc", "route_type", "route_url", "route_color", "route_text_color", "route_sort_order"
   269                                                 # passed to RT "route_id", "route_short_name"
   270   56.535 MiB    0.016 MiB         222           RT.add_route(row[0], row[2])
   271
   272   64.762 MiB    8.227 MiB           1       s = archive.read('trips.txt').decode("utf-8").splitlines()[1:]
   273  124.352 MiB -164.430 MiB       58198       for row in csv.reader(s, quotechar='"', delimiter=',', quoting=csv.QUOTE_ALL, skipinitialspace=True):
   274                                                 # "route_id","service_id","trip_id","trip_headsign","trip_short_name","direction_id","block_id","shape_id","wheelchair_accessible","bikes_allowed","limited_route"
   275                                                 # passed to RT "trip_id", "route_id", "direction_id", "trip_headsign", "limited_route"
   276  124.352 MiB -140.148 MiB       58197           RT.add_trip(row[2], row[0], int(row[5]), row[3], int(row[10]))
   277
   278
   279  325.820 MiB  201.469 MiB           1       s = archive.read('stop_times.txt').decode("utf-8").splitlines()[1:]
   280  325.820 MiB    0.000 MiB           1       times = {}
   281  325.820 MiB    0.000 MiB           1       dt = datetime.datetime.now()
   282  325.820 MiB    0.000 MiB           1       timetable_id = {}
   283  325.820 MiB    0.000 MiB           1       """
   284                                             {
   285                                                route_id:
   286                                                {
   287                                                     trip_id:
   288                                                     {
   289                                                         dic: {stop_sequence: stop_id, ...}
   290                                                         set: set(stop_sequence-stop_id, ...)
   291                                                     }, ...
   292                                                }, ...
   293                                             }
   294                                             """
   295  922.887 MiB -70504.285 MiB     1780392       for row in csv.reader(s, quotechar='"', delimiter=',', quoting=csv.QUOTE_ALL, skipinitialspace=True):
   296                                                 # "trip_id","arrival_time","departure_time","stop_id","stop_sequence","stop_headsign","pickup_type","drop_off_type","shape_dist_traveled","timepoint"
   297                                                 # passed to RT "trip_id", "stop_sequence", "stop_id"
   298  922.887 MiB -70744.777 MiB     1780391           route_id = RT.trips[row[0]]["route_id"]
   299
   300  922.887 MiB -70746.305 MiB     1780391           if route_id not in timetable_id:
   301  922.125 MiB    0.000 MiB         222               timetable_id[route_id] = {}
   302  922.125 MiB    0.023 MiB         222               timetable_id[route_id][row[0]] = {
   303  922.125 MiB    0.012 MiB         222                   "dic": {int(row[4]): row[3]},
   304  922.125 MiB    0.023 MiB         222                   "set": {row[4]+"-"+row[3]}
   305                                                     }
   306  922.887 MiB -70746.930 MiB     1780169           elif row[0] not in timetable_id[route_id]:
   307  922.199 MiB   10.184 MiB       57975               timetable_id[route_id][row[0]] = {
   308  922.199 MiB    7.430 MiB       57975                   "dic": {int(row[4]): row[3]},
   309  922.199 MiB   14.684 MiB       57975                   "set": {row[4]+"-"+row[3]}
   310                                                     }
   311                                                 else:
   312  922.887 MiB -70665.879 MiB     1722194               timetable_id[route_id][row[0]]["dic"][int(row[4])] = row[3]
   313  922.887 MiB -70600.086 MiB     1722194               timetable_id[route_id][row[0]]["set"].add(row[4]+"-"+row[3])
   314
   315  922.887 MiB -70743.508 MiB     1780391           ti = row[1].split(':')
   316  922.887 MiB -70747.004 MiB     1780391           if int(ti[0]) > 23:
   317  922.578 MiB -2035.078 MiB       43938               dt += datetime.timedelta(days=1)
   318  922.887 MiB -70685.254 MiB     1780391           dt = dt.replace(hour=int(ti[0]) % 24, minute=int(ti[1]), second=int(ti[2]), microsecond=0)
   319  922.887 MiB -70748.086 MiB     1780391           if row[0] in times:
   320  922.887 MiB -70727.680 MiB     1722194               times[row[0]].append((int(row[4]), dt.timestamp()))
   321                                                 else:
   322  922.199 MiB    5.668 MiB       58197               times[row[0]] = [(int(row[4]), dt.timestamp())]
   323  922.887 MiB -70612.516 MiB     1780391           if int(ti[0]) > 23:
   324  922.578 MiB -2035.398 MiB       43938               dt -= datetime.timedelta(days=1)
   325
   326  922.895 MiB    0.008 MiB           1       archive.close()
   327
   328  922.898 MiB    0.004 MiB           1       cnt = 0
   329  922.898 MiB    0.000 MiB           1       cnt2 = 0
   330  932.934 MiB -2808.043 MiB         223       for route_id, trips in timetable_id.items():
   331  932.945 MiB -480985.121 MiB       58419           for trip_id_A, data_A in trips.items():
   332  932.945 MiB -478176.480 MiB       58197               if RT.trips[trip_id_A]["timetable_version"] == "":
   333  932.945 MiB -19464.473 MiB        1408                   cnt += 1
   334  932.957 MiB -19448.891 MiB        1408                   RT.add_timetable(route_id, data_A["dic"], trip_id_A)
   335  932.957 MiB -19465.660 MiB        1408                   RT.trips[trip_id_A]["timetable_version"] = trip_id_A
   336  932.957 MiB -2457865.984 MiB      361768                   for trip_id_B, data_B in trips.items():
   337  932.957 MiB -2438386.191 MiB      360360                       if RT.trips[trip_id_B]["timetable_version"] == "" and data_A["set"] == data_B["set"]:
   338  932.957 MiB -453122.410 MiB       56789                           RT.trips[trip_id_B]["timetable_version"] = trip_id_A
   339  932.934 MiB -2809.027 MiB         222           cnt2 += len(trips)
   340                                             #timetable_id = {}
   341  738.496 MiB -194.438 MiB           1       del timetable_id
   342  738.504 MiB    0.008 MiB           1       print(f"--- {cnt2} trips reduced to {cnt} timetable versions ({round(cnt2/cnt)}:1) ---")
   343
   344  828.172 MiB    0.004 MiB       58198       for trip_id, arrivals in times.items():
   345  828.172 MiB   89.664 MiB       58197           RT.add_arrival(trip_id, arrivals)
   346  761.574 MiB  -66.598 MiB           1       RT.clear_arrivals()
   347  761.574 MiB    0.000 MiB           1       runningGTFS = 0
   348  761.582 MiB    0.008 MiB           1       print("--- getGTFS: %s seconds ---" % (time.time() - t))


Filename: main.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   359  546.219 MiB  546.219 MiB           1   @profile
   360                                         def getRT():
   361                                             global RT, runningRT
   362  546.219 MiB    0.000 MiB           1       runningRT = 1
   363  546.422 MiB    0.203 MiB           1       threading.Timer(15, RTmanager, [0]).start()
   364
   365  546.422 MiB    0.000 MiB           1       t = time.time()
   366  546.441 MiB    0.020 MiB           1       rt = gtfs_realtime_pb2.FeedMessage()
   367  546.441 MiB    0.000 MiB           1       try:
   368  546.207 MiB   -0.234 MiB           1           response = requests.get('http://percorsieorari.gtt.to.it/das_gtfsrt/trip_update.aspx')
   369  546.719 MiB    0.512 MiB           1           rt.ParseFromString(response.content)
   370                                             except ConnectionError as err:
   371                                                 logger(
   372                                                     f'{getDatetimeNowStr()} <b>getRT()<\b>\nrequest.get(), rt.ParseFromString(response.content) raised ConnectionError: {repr(err)},\naborting')
   373                                                 runningRT = 0
   374                                                 return 0
   375  546.758 MiB    0.039 MiB           1       print(getDatetimeNowStr())
   376  546.770 MiB    0.012 MiB           1       print(f"--- retrieveRT  ({len(rt.entity)} items):\t{'{:.5f}'.format(time.time() - t)} seconds\t---")
   377  546.770 MiB    0.000 MiB           1       t = time.time()
   378
   379  546.770 MiB    0.000 MiB           1       ct = 0
   380  546.770 MiB    0.000 MiB           1       updated_trips = set()
   381  546.875 MiB    0.000 MiB         179       for entity in rt.entity:
   382  546.875 MiB    0.012 MiB         178           if entity.HasField('trip_update'):
   383  546.875 MiB    0.004 MiB         178               if RT.check_trip(entity.trip_update.trip.trip_id) == 0:
   384                                                         logger(
   385                                                             f'{getDatetimeNowStr()} not such trip_id: {entity.trip_update.trip.trip_id},\ncalling getGTFS()')
   386                                                         getGTFS()
   387                                                         runningRT = 0
   388                                                         return 0
   389  546.875 MiB    0.000 MiB         178               updated_trips.add(entity.trip_update.trip.trip_id)
   390  546.875 MiB    0.000 MiB         178               RT.clear_trip_stop_times(entity.trip_update.trip.trip_id)
   391  546.875 MiB    0.000 MiB         178               counter = 0  # used to load only one estimated time, all the other will estimated by the system
   392  546.875 MiB    0.000 MiB         178               arrivals = []
   393  546.875 MiB    0.000 MiB        1398               for stopt in entity.trip_update.stop_time_update:
   394  546.875 MiB    0.000 MiB        1220                   if float(stopt.departure.time) >= time.time():
   395  546.875 MiB    0.000 MiB        1079                       if counter == 0:
   396  546.875 MiB    0.004 MiB         171                           RT.set_stop_time(entity.trip_update.trip.trip_id, stopt.stop_sequence, stopt.departure.time, 0)
   397  546.875 MiB    0.086 MiB         171                           ct += RT.extend_stop_times(entity.trip_update.trip.trip_id) + 1
   398  546.875 MiB    0.000 MiB         171                           counter = 1
   399                                                         else:
   400  546.875 MiB    0.000 MiB         141                       arrivals.append((stopt.stop_sequence, stopt.departure.time))
   401
   402  546.875 MiB    0.000 MiB         178               if len(arrivals) > 0:
   403  546.875 MiB    0.000 MiB          59                   RT.add_arrival(entity.trip_update.trip.trip_id, arrivals)
   404
   405  578.609 MiB   31.734 MiB           1       RT.check_trip_stop_times(updated_trips)
   406  578.609 MiB    0.000 MiB           1       t = time.time() - t
   407  578.637 MiB    0.027 MiB           1       print("\033[96m", end="")
   408  578.637 MiB    0.000 MiB           1       if t > 10:
   409                                                 print("\u001b[7m", end="")
   410                                                 logger(f"{getDatetimeNowStr()}--- getRT ({ct} items):\t{t} seconds\t---")
   411  578.637 MiB    0.000 MiB           3       print(f"--- getRT" + ' ' * (
   412  578.637 MiB    0.000 MiB           2               10 - len(str(ct))) + f"({ct} items):\t{'{:.5f}'.format(t)} seconds\t---\u001b[0m")
   413  578.637 MiB    0.000 MiB           1       runningRT = 0
   414  578.637 MiB    0.000 MiB           1       t = time.time()
   415  578.637 MiB    0.000 MiB           1       try:
   416  578.695 MiB    0.059 MiB           1           response = requests.get('http://percorsieorari.gtt.to.it/das_gtfsrt/vehicle_position.aspx')
   417  578.867 MiB    0.172 MiB           1           rt.ParseFromString(response.content)
   418                                             except ConnectionError as err:
   419                                                 logger(
   420                                                     f'{getDatetimeNowStr()} <b>getRT()<\b>\nrequest.get(), rt.ParseFromString(response.content) raised ConnectionError: {repr(err)},\naborting')
   421                                                 return 0
   422
   423  578.867 MiB    0.000 MiB           1       print(f"--- retrievePos ({len(rt.entity)} items):\t{'{:.5f}'.format(time.time() - t)} seconds\t---")
   424  578.867 MiB    0.000 MiB           1       t = time.time()
   425  579.480 MiB    0.000 MiB         181       for el in rt.entity:
   426  579.477 MiB    0.004 MiB         180           if el.HasField('vehicle'):
   427  579.477 MiB    0.000 MiB         180               v = el.vehicle
   428  579.480 MiB    0.609 MiB         180               RT.update_position_trip(v.trip.trip_id, v.position.latitude, v.position.longitude, v.position.bearing, v.timestamp)
   429
   430  579.480 MiB    0.000 MiB           1       print(f"--- getPos      ({len(rt.entity)} items):\t{'{:.5f}'.format(time.time() - t)} seconds\t---")


Filename: main.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   510   27.289 MiB   27.289 MiB           1   @profile
   511                                         def init(l):
   512                                             global logger, runningRT, runningGTFS
   513   27.293 MiB    0.004 MiB           1       logger = l
   514   27.293 MiB    0.000 MiB           1       runningRT = 0
   515   27.293 MiB    0.000 MiB           1       runningGTFS = 0
   516  546.215 MiB  546.215 MiB           1       getGTFS()
   517  579.480 MiB  579.480 MiB           1       getRT()